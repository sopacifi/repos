{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "commonName": {
      "type": "string",
      "metadata": {
        "description": "Hostname for App Service Certificate. The root and www subdomain should be assigned to the Web App as custom domains"
      },
      "defaultValue": "pbiejjtd5.sbp.eyclienthubd.com"
    },
    "certificateName": {
      "type": "string",
      "metadata": {
        "description": "Certificate resource name"
      }
    },

    "applicationServicePlanName": {
      "type": "string"
    },
    "applicationServicePlanInstanceSize": {
      "type": "string",
      "defaultValue": "S1",
      "allowedValues": [
        "P1v2",
        "P2v2",
        "P3v2",
        "S1",
        "S2",
        "S3",
        "B1",
        "B2",
        "B3",
        "D1",
        "F1"
      ]
    },
    "applicationServicePlanNumberOfInstances": {
      "type": "string",
      "defaultValue": "1"
    },
    "applicationServicePlanOS": {
      "type": "string",
      "defaultValue": "windows",
      "allowedValues": [
        "windows",
        "linux"
      ]
    },

    "logAnalyticsWorkspaceId": {
      "type": "string",
      "defaultValue": "Existing log analytics workspace id in format /subscriptions/<subscriptionid>/resourcegroups/<resourcegroup>/providers/microsoft.operationalinsights/workspaces/<workspacename>"
    },

    "existingKeyVaultId": {
      "type": "string",
      "defaultValue": "/subscriptions/c5b8eabf-6a2b-4574-9db9-f8190efc384c/resourcegroups/glbd0000ipbiersg001/providers/microsoft.keyvault/vaults/glbd0000ipbieakv001",
      "metadata": {
        "description": "Existing Key Vault resource Id that already has the following access policies on the secrets --> Microsoft.CertificateRegistration (f3c21649-0979-4721-ac85-b0216b2cf413): get, set, delete | Microsoft.Web (abfa0a7c-a6b6-4736-8310-5855508787cd): get"
      }
    },

    "deploymentSlots": {
      "type": "Array",
      "defaultValue": [ "s1", "s2", "s3" ],
      "metadata": {
        "description": "Web App deployment slots to be created"
      }
    }


  },
  "variables": {

    "distinguishedName": "[concat('CN=', parameters('commonName'))]",
    "productType": "StandardDomainValidatedSsl",
    "webappName": "[substring(parameters('commonName'), 0, indexOf(parameters('commonName'),'.'))]",
    "logRetentionDays": 0,


    "ResourceDeployment": {
      "asp": true,
      "webapp": true
    }
  },
  "resources": [
    {
      "condition": "[variables('ResourceDeployment').asp]",
      "apiVersion": "2016-03-01",
      "type": "Microsoft.Web/serverfarms",
      "kind": "[if(equals(parameters('applicationServicePlanOS'), 'linux'), 'linux', '')]",
      "name": "[parameters('applicationServicePlanName')]",
      "location": "[resourceGroup().location]",
      "tags": {
        "ROLE_PURPOSE": "App Service plan"
      },
      "properties": {
        "name": "[parameters('applicationServicePlanName')]",
        "reserved": "[if(equals(parameters('applicationServicePlanOS'), 'linux'),'true','false')]"
      },
      "sku": {
        "capacity": "[int(parameters('applicationServicePlanNumberOfInstances'))]",
        "Name": "[parameters('applicationServicePlanInstanceSize')]"
      },
      "resources": [
        {
          "condition": "[variables('ResourceDeployment').asp]",
          "apiVersion": "2015-07-01",
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]"
          ],
          "properties": {
            "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[variables('logRetentionDays')]"
                }
              }
            ]
          }
        }
      ],
      "dependsOn": []
    },









    {
      "condition": "[variables('ResourceDeployment').webapp]",
      "dependsOn": [
        "[concat('Microsoft.Web/serverfarms/', parameters('applicationServicePlanName'))]"
      ],
      "type": "Microsoft.Web/sites",
      "kind": "app",
      "name": "[variables('webappName')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ROLE_PURPOSE": "App Service"
      },
      "properties": {
        "name": "[variables('webappName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]",
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('webappName'),'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[parameters('commonName')]",
            "sslState": "SniEnabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('webappName'),'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "resources": [
        {
          "condition": "[variables('ResourceDeployment').webapp]",
          "apiVersion": "2015-07-01",
          "type": "providers/diagnosticSettings",
          "name": "Microsoft.Insights/service",
          "location": "[resourceGroup().location]",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites', variables('webappName'))]"
          ],
          "properties": {
            "workspaceId": "[parameters('logAnalyticsWorkspaceId')]",
            "logs": [
              {
                "category": "FunctionExecutionLogs",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": true,
                  "days": "[variables('logRetentionDays')]"
                }
              }
            ],
            "metrics": [
              {
                "category": "AllMetrics",
                "enabled": true,
                "retentionPolicy": {
                  "enabled": false,
                  "days": "[variables('logRetentionDays')]"
                }
              }
            ]
          }
        },
        {
          "condition": "[variables('ResourceDeployment').webapp]",
          "name": "authsettings",
          "type": "config",
          "apiVersion": "2015-08-01",
          "dependsOn": [
            "[resourceId('Microsoft.Web/sites/', variables('webappName') )]"
          ],
          "tags": {
            "displayName": "websiteAuthSettings"
          },
          "properties": {
            "enabled": false,
            "httpApiPrefixPath": null,
            "unauthenticatedClientAction": 1,
            "tokenStoreEnabled": true,
            "allowedExternalRedirectUrls": null,
            "defaultProvider": 0,
            "clientId": null,
            "clientSecret": null,
            "issuer": null,
            "allowedAudiences": null,
            "additionalLoginParams": null,
            "isAadAutoProvisioned": false,
            "googleClientId": null,
            "googleClientSecret": null,
            "googleOAuthScopes": null,
            "facebookAppId": null,
            "facebookAppSecret": null,
            "facebookOAuthScopes": [
              ""
            ],
            "twitterConsumerKey": null,
            "twitterConsumerSecret": null,
            "microsoftAccountClientId": null,
            "microsoftAccountClientSecret": null,
            "microsoftAccountOAuthScopes": [
              ""
            ]
          }
        }
      ]
    },



    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "name": "[concat(variables('webappName'), '/', parameters('commonName') )]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "siteName": "[variables('webappName')]",
        "domainId": null,
        "hostNameType": "Verified"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webappName'))]"
      ]
    },
    {
      "type": "Microsoft.Web/sites/hostNameBindings",
      "name": "[concat(variables('webappName'), '/', variables('webappName'), '.azurewebsites.net')]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "properties": {
        "siteName": "[variables('webappName')]",
        "domainId": null,
        "hostNameType": "Verified"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webappName'))]",
        "[concat('Microsoft.Web/sites/', variables('webappName'), '/hostNameBindings/', parameters('commonName') )]"
      ]
    },









    {
      "condition": "[variables('ResourceDeployment').webapp]",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('webappName'), '/', parameters('DeploymentSlots')[copyIndex()])]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "tags": {
        "ROLE_PURPOSE": "Web App"
      },
      "scale": null,
      "copy": {
        "name": "slotsCopy",
        "count": "[length(parameters('DeploymentSlots'))]"
      },
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('webappName'), '-', parameters('DeploymentSlots')[copyIndex()],'.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          },
          {
            "name": "[concat(variables('webappName'), '-', parameters('DeploymentSlots')[copyIndex()],'.scm.azurewebsites.net')]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": null,
        "clientAffinityEnabled": true,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webappName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]"
      ]
    },








    {
      "type": "Microsoft.CertificateRegistration/certificateOrders",
      "name": "[parameters('certificateName')]",
      "apiVersion": "2015-08-01",
      "location": "global",
      "tags": {
        "ROLE_PURPOSE": "App Service Certificate"
      },
      "properties": {
        "DistinguishedName": "[variables('distinguishedName')]",
        "ValidityInYears": 1,
        "ProductType": "[variables('productType')]"
      }
    },



    {
      "type": "Microsoft.Web/sites/domainOwnershipIdentifiers",
      "name": "[concat(variables('webappName'), '/', parameters('certificateName'))]",
      "apiVersion": "2016-08-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('webappName'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]",
        "[resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('certificateName'))]"
      ],
      "properties": {
        "id": "[reference(resourceId('Microsoft.CertificateRegistration/certificateOrders', parameters('certificateName'))).DomainVerificationToken]"
      }
    },


    {
      "type": "Microsoft.CertificateRegistration/certificateOrders/certificates",
      "name": "[concat(parameters('certificateName'), concat('/', parameters('certificateName')))]",
      "apiVersion": "2015-08-01",
      "location": "global",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/domainOwnershipIdentifiers', variables('webappName'), parameters('certificateName'))]"
      ],
      "properties": {
        "keyVaultId": "[parameters('existingKeyVaultId')]",
        "keyVaultSecretName": "[parameters('certificateName')]"
      }
    },


    {
      "type": "Microsoft.Web/certificates",
      "name": "[parameters('certificateName')]",
      "apiVersion": "2016-03-01",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/domainOwnershipIdentifiers', variables('webappName'), parameters('certificateName'))]",
        "[resourceId('Microsoft.CertificateRegistration/certificateOrders/certificates', parameters('certificateName'), parameters('certificateName'))]"
      ],
      "properties": {
        "keyVaultId": "[parameters('existingKeyVaultId')]",
        "keyVaultSecretName": "[parameters('certificateName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('applicationServicePlanName'))]"
      }
    },



    {
      "name": "WebAppCertAssigment",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2017-05-10",
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites/domainOwnershipIdentifiers', variables('webappName'), parameters('certificateName'))]"
      ],
      "properties": {
        "mode": "Incremental",
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {},
          "variables": {},
          "resources": [
            {
              "type": "Microsoft.Web/sites",
              "name": "[variables('webappName')]",
              "apiVersion": "2015-08-01",
              "location": "[resourceGroup().location]",
              "dependsOn": [],
              "properties": {
                "name": "[variables('webappName')]",
                "hostNameSslStates": [
                  {
                    "name": "[parameters('commonName')]",
                    "sslState": "SniEnabled",
                    "thumbprint": "[reference( resourceId('Microsoft.Web/certificates', parameters('certificateName') )).Thumbprint ]",
                    "toUpdate": true
                  }
                ]
              },
              "tags": {
                "ROLE_PURPOSE": "App Service"
              }
            },

            {
              "type": "Microsoft.Web/sites/hostNameBindings",
              "name": "[concat(variables('webappName'), '/', parameters('commonName') )]",
              "apiVersion": "2016-08-01",
              "location": "[resourceGroup().location]",
              "properties": {
                "siteName": "[variables('webappName')]",
                "domainId": null,
                "hostNameType": "Verified",
                "sslState": "SniEnabled",
                "thumbprint": "[reference( resourceId('Microsoft.Web/certificates', parameters('certificateName') )).Thumbprint ]"
              },
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', variables('webappName'))]"
              ]
            }

          ]
        }
      }
    }


  ],
  "outputs": {}
}
