{
  {
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "environment": {
        "type": "string",
        "minLength": 1
      },
      "domain": {
        "type": "string",
        "minLength": 1
      },
      "dbPassword": {
        "type": "string",
        "minLength": 1
      },
      "sharedResourceName": {
        "type": "string",
        "minLength": 1
      },
      "certificate-Name": {
        "type": "string"
      },
      "connectionstring-CRMConnection": {
        "type": "string"
      },
      "appsetting-CatchAllEmailForTesting": { "type": "string" },
      "appsetting-CatchAllEmailAddress": { "type": "string" },
      "appsetting-SendGridAPIKey": { "type": "string" },
      "appsetting-UseGoogleTagManager": { "type": "string" },
      "appsetting-ForumBaseUrl": { "type": "string" },
      "appsetting-NotificationBaseUrl": { "type": "string" }
    },
    "variables": {
      "genericEnvironmentName": "[concat('surgent-', parameters('environment'))]",
      "storageAccountName": "[concat('examreview', toLower(parameters('environment')), 'storage')]",
      "appsetting-EnvironmentName": "[parameters('environment')]",
      "lmsWebsiteName": "[concat('examreview-', parameters('environment'))]",
      "isacaWebsiteName": "[concat('isaca-', parameters('environment'))]",
      "appsetting-LMSBaseUrl": "[concat('https://', variables('lmsWebsiteName'), '.', parameters('domain'), '/')]",
      "appsetting-CMSBaseUrl": "[concat('https://examreview-cms-', parameters('environment'), '.', parameters('domain'), '/')]",
      "appsetting-AdminBaseUrl": "[concat('https://examreview-admin-', parameters('environment'), '.', parameters('domain'), '/')]",
      "siteProperties": {
        "serverFarmId": "[resourceId(parameters('sharedResourceName'), 'Microsoft.Web/serverfarms', parameters('sharedResourceName'))]",
        "clientAffinityEnabled": false,
        "httpsOnly": true
      },
      "siteConfigProperties": {
        "netFrameworkVersion": "v4.7",
        "use32BitWorkerProcess": false,
        "clientAffinityEnabled": false,
        "alwaysOn": true,
        "httpsOnly": true
      }
    },
    "resources": [
      {
        "apiVersion": "2015-08-01",
        "name": "[variables('lmsWebsiteName')]",
        "type": "Microsoft.Web/sites",
        "location": "[resourceGroup().location]",
        "tags": {
          "business-unit": "ER",
          "role": "[parameters('environment')]"
        },
        "properties": "[variables('siteProperties')]",
        "resources": [
          {
            "apiVersion": "2015-08-01",
            "name": "[concat(variables('lmsWebsiteName'), '/web')]",
            "type": "Microsoft.Web/sites/config",
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', variables('lmsWebsiteName'))]"
            ],
            "properties": "[variables('siteConfigProperties')]"
          },
          {
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('lmsWebsiteName'), '/connectionstrings')]",
            "dependsOn": [
              "[concat('Microsoft.Web/sites/', variables('lmsWebsiteName'))]"
            ],
            "properties": {
              "DefaultConnection": {
                "value": "[concat('Server=tcp:',reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Sql/servers', parameters('sharedResourceName')), '2015-05-01-preview').fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('genericEnvironmentName'), ';Persist Security Info=False;User ID=', reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Sql/servers', parameters('sharedResourceName')), '2015-05-01-preview').administratorLogin,';Password=',parameters('dbPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                "type": "SQLAzure"
              },
              "StorageConnection": {
                "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-02-01').keys[0].value)]",
                "type": "Custom"
              },
              "CRMConnection": {
                "value": "[parameters('connectionstring-CRMConnection')]",
                "type": "Custom"
              }
            }
          },
          {
            "apiVersion": "2015-08-01",
            "location": "[resourceGroup().location]",
            "type": "Microsoft.Web/sites/config",
            "name": "[concat(variables('lmsWebsiteName'), '/appsettings')]",
            "dependsOn": [
              "[concat('Microsoft.Web/sites/', variables('lmsWebsiteName'))]"
            ],
            "properties": {
              "Environment": "[variables('appsetting-EnvironmentName')]",
              "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('lmsWebsiteName')), '2014-04-01').InstrumentationKey]",
              "AppInsightsInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('lmsWebsiteName')), '2014-04-01').InstrumentationKey]",
              "ShowEntityFrameworkSqlQueriesInOutputWindows": "false",
              "LMSBaseUrl": "[variables('appsetting-LMSBaseUrl')]",
              "CMSBaseUrl": "[variables('appsetting-CMSBaseUrl')]",
              "AdminBaseUrl": "[variables('appsetting-AdminBaseUrl')]",
              "NotificationBaseUrl": "[parameters('appsetting-NotificationBaseUrl')]",
              "ForumBaseUrl": "[parameters('appsetting-ForumBaseUrl')]",
              "CatchAllEmailForTesting": "[parameters('appsetting-CatchAllEmailForTesting')]",
              "CatchAllEmailAddress": "[parameters('appsetting-CatchAllEmailAddress')]",
              "EventGridSasToken": "[listKeys(resourceId(concat('surgent-', parameters('environment')), 'Microsoft.EventGrid/topics', concat('surgent-', parameters('environment'))), '2018-01-01').key1]",
              "EventGridTopicEndpointUrl": "[reference(resourceId(concat('surgent-', parameters('environment')), 'Microsoft.EventGrid/topics', concat('surgent-', parameters('environment'))), '2018-01-01').endpoint]",
              "UseGoogleTagManager": "[parameters('appsetting-UseGoogleTagManager')]",
              "SendGridAPIKey": "[parameters('appsetting-SendGridAPIKey')]"
            }
          },
          {
            "apiVersion": "2016-08-01",
            "name": "[concat(variables('lmsWebsiteName'),'/',variables('lmsWebsiteName'), '.', parameters('domain'))]",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites/', variables('lmsWebsiteName'))]"
            ],
            "properties": {
              "siteName": "[concat(variables('lmsWebsiteName'), '.', parameters('domain'))]",
              "domainId": null,
              "hostNameType": "Verified",
              "sslState": "SniEnabled",
              "thumbprint": "[reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Web/certificates', parameters('certificate-Name')), providers('Microsoft.Web', 'certificates').apiVersions[0]).thumbprint]"
            }
          },
          {
            "apiVersion": "2016-08-01",
            "name": "[concat(variables('lmsWebsiteName'),'/',variables('isacaWebsiteName'), '.', parameters('domain'))]",
            "type": "Microsoft.Web/sites/hostNameBindings",
            "location": "[resourceGroup().location]",
            "dependsOn": [
              "[resourceId('Microsoft.Web/sites/', variables('lmsWebsiteName'))]"
            ],
            "properties": {
              "siteName": "[concat(variables('isacaWebsiteName'), '.', parameters('domain'))]",
              "domainId": null,
              "hostNameType": "Verified",
              "sslState": "SniEnabled",
              "thumbprint": "[reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Web/certificates', parameters('certificate-Name')), providers('Microsoft.Web', 'certificates').apiVersions[0]).thumbprint]"
            }
          },
          {
            "apiVersion": "2015-08-01",
            "name": "staging",
            "type": "slots",
            "location": "[resourceGroup().location]",
            "tags": {
              "business-unit": "ER",
              "role": "[parameters('environment')]"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Web/Sites', variables('lmsWebsiteName'))]"
            ],
            "properties": "[variables('siteProperties')]",
            "resources": [
              {
                "apiVersion": "2015-08-01",
                "name": "web",
                "type": "config",
                "dependsOn": [
                  "[resourceId('Microsoft.Web/sites/slots', variables('lmsWebsiteName'), 'staging')]"
                ],
                "properties": "[variables('siteConfigProperties')]"
              },
              {
                "apiVersion": "2015-08-01",
                "name": "appsettings",
                "type": "config",
                "dependsOn": [
                  "[resourceId('Microsoft.Web/sites/slots', variables('lmsWebsiteName'), 'staging')]"
                ],
                "properties": {
                  "Environment": "[variables('appsetting-EnvironmentName')]",
                  "APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.Insights/components', variables('lmsWebsiteName')), '2014-04-01').InstrumentationKey]",
                  "AppInsightsInstrumentationKey": "[reference(resourceId('Microsoft.Insights/components', variables('lmsWebsiteName')), '2014-04-01').InstrumentationKey]",
                  "ShowEntityFrameworkSqlQueriesInOutputWindows": "false",
                  "LMSBaseUrl": "[variables('appsetting-LMSBaseUrl')]",
                  "CMSBaseUrl": "[variables('appsetting-CMSBaseUrl')]",
                  "AdminBaseUrl": "[variables('appsetting-AdminBaseUrl')]",
                  "NotificationBaseUrl": "[parameters('appsetting-NotificationBaseUrl')]",
                  "ForumBaseUrl": "[parameters('appsetting-ForumBaseUrl')]",
                  "CatchAllEmailForTesting": "[parameters('appsetting-CatchAllEmailForTesting')]",
                  "CatchAllEmailAddress": "[parameters('appsetting-CatchAllEmailAddress')]",
                  "EventGridSasToken": "[listKeys(resourceId(concat('surgent-', parameters('environment')), 'Microsoft.EventGrid/topics', concat('surgent-', parameters('environment'))), '2018-01-01').key1]",
                  "EventGridTopicEndpointUrl": "[reference(resourceId(concat('surgent-', parameters('environment')), 'Microsoft.EventGrid/topics', concat('surgent-', parameters('environment'))), '2018-01-01').endpoint]",
                  "UseGoogleTagManager": "[parameters('appsetting-UseGoogleTagManager')]",
                  "SendGridAPIKey": "[parameters('appsetting-SendGridAPIKey')]"
                }
              },
              {
                "apiVersion": "2015-08-01",
                "name": "connectionstrings",
                "type": "config",
                "dependsOn": [
                  "[resourceId('Microsoft.Web/sites/slots', variables('lmsWebsiteName'), 'staging')]"
                ],
                "properties": {
                  "DefaultConnection": {
                    "value": "[concat('Server=tcp:',reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Sql/servers', parameters('sharedResourceName')), '2015-05-01-preview').fullyQualifiedDomainName, ',1433;Initial Catalog=', variables('genericEnvironmentName'), ';Persist Security Info=False;User ID=', reference(resourceId(parameters('sharedResourceName'), 'Microsoft.Sql/servers', parameters('sharedResourceName')), '2015-05-01-preview').administratorLogin,';Password=',parameters('dbPassword'),';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
                    "type": "SQLAzure"
                  },
                  "StorageConnection": {
                    "value": "[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2018-02-01').keys[0].value)]",
                    "type": "Custom"
                  },
                  "CRMConnection": {
                    "value": "[parameters('connectionstring-CRMConnection')]",
                    "type": "Custom"
                  }
                }
              }
            ]
          }

        ]
      }
    ]
  }
}
