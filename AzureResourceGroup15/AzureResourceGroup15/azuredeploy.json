{
  "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "variables": {
    "webApiVersion": "2018-02-01",
    "autoScaleApiVersion": "2015-04-01",
    "serverFarmApiVersion": "2016-09-01",
    "dbApiVersion": "2014-04-01-preview",
    "dbApiElasticpoolVersion": "2014-04-01",
    "searchApiVersion": "2015-08-19",
    "redisApiVersion": "2016-04-01",
    "appInsightsApiVersion": "2015-05-01",
    "cmWebAppNameTidy": "[toLower(trim(parameters('cmWebAppName')))]",
    "cdWebAppNameTidy": "[toLower(trim(parameters('cdWebAppName')))]",
    "fdpSchedWebAppNameTidy": "[toLower(trim(parameters('fdpSchedWebAppName')))]",
    "fdpApiWebAppNameTidy": "[toLower(trim(parameters('fdpApiWebAppName')))]",
    "cmWebAppNameTidySupport": "[toLower(trim(parameters('cmWebAppNameSupport')))]",
    "cdWebAppNameTidySupport": "[toLower(trim(parameters('cdWebAppNameSupport')))]",
    "fdpSchedWebAppNameTidySupport": "[toLower(trim(parameters('fdpSchedWebAppNameSupport')))]",
    "fdpApiWebAppNameTidySupport": "[toLower(trim(parameters('fdpApiWebAppNameSupport')))]",
    "dbServerNameTidy": "[toLower(trim(parameters('sqlServerName')))]",
    "webDbServerNameTidy": "[toLower(trim(parameters('webSqlServerName')))]",
    "coreDbNameTidy": "[toLower(trim(parameters('coreSqlDatabaseName')))]",
    "webDbNameTidy": "[toLower(trim(parameters('webSqlDatabaseName')))]",
    "repDbNameTidy": "[toLower(trim(parameters('reportingSqlDatabaseName')))]",
    "masterDbNameTidy": "[toLower(trim(parameters('masterSqlDatabaseName')))]",
    "fdpDbNameTidy": "[toLower(trim(parameters('fdpSqlDatabaseName')))]",
    "coreDbNameTidySupport": "[toLower(trim(parameters('coreSqlDatabaseNameSupport')))]",
    "webDbNameTidySupport": "[toLower(trim(parameters('webSqlDatabaseNameSupport')))]",
    "repDbNameTidySupport": "[toLower(trim(parameters('reportingSqlDatabaseNameSupport')))]",
    "masterDbNameTidySupport": "[toLower(trim(parameters('masterSqlDatabaseNameSupport')))]",
    "fdpDbNameTidySupport": "[toLower(trim(parameters('fdpSqlDatabaseNameSupport')))]",
    "searchServiceNameTidySupport": "[toLower(trim(parameters('searchServiceNameSupport')))]",
    "searchServiceNameTidy": "[toLower(trim(parameters('searchServiceName')))]",
    "redisCacheNameTidy": "[toLower(trim(parameters('redisCacheName')))]",
    "appInsightsNameTidy": "[toLower(trim(parameters('applicationInsightsName')))]",
    "appInsightsNameTidySupport": "[toLower(trim(parameters('applicationInsightsNameSupport')))]",
    "appInsightsPricePlanTidy": "[toLower(trim(parameters('applicationInsightsPricePlan')))]",
    "vnetId": "[resourceId(concat(parameters('deploymentEnvironment'),'networkrgweu'),'Microsoft.Network/virtualNetworks', parameters('ASEvNetName'))]"
  },
  "parameters": {
    "deploymentId": {
      "type": "string",
      "defaultValue": "[resourceGroup().name]"
    },
    "location": {
      "type": "string",
      "defaultValue": "West Europe"
    },
    "tagValues": {
      "type": "object"
    },
    "locationName": {
      "type": "string"
    },
    "deploymentEnvironment": {
      "type": "string"
    },
    "BackendASEName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'ase',parameters('locationName'),'-backend')]"
    },
    "ASEvNetName": {
      "type": "string"
    },
    "BackendASEsubnetName": {
      "type": "string",
      "metadata": {
        "description": "Subnet name that will contain the front end App Service Environment for ASE"
      }
    },
    "internalLoadBalancingMode": {
      "type": "int",
      "allowedValues": [
        0,
        1,
        2,
        3
      ],
      "metadata": {
        "description": "0 = public VIP only, 1 = only ports 80/443 are mapped to ILB VIP, 2 = only FTP ports are mapped to ILB VIP, 3 = both ports 80/443 and FTP ports are mapped to an ILB VIP."
      }
    },
    "backenddnsSuffix": {
      "type": "string",
      "metadata": {
        "description": "Used *only* when deploying an ILB enabled ASE.  Set this to the root domain associated with the ASE.  For example: contoso.com"
      }
    },
    "cmHostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'asp',parameters('locationName'),'-cm')]"
    },
    "cdHostingPlanName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'asp',parameters('locationName'),'-cd')]"
    },
    "cmWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-cm')]"
    },
    "cdWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-cd')]"
    },
    "fdpSchedWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-fdpSched')]"
    },
    "fdpApiWebAppName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-fdpApi')]"
    },
    "cmWebAppNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-cm-Support')]"
    },
    "cdWebAppNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-cd-Support')]"
    },
    "fdpSchedWebAppNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-fdpsched-support')]"
    },
    "fdpApiWebAppNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'was',parameters('locationName'),'-fdpApi-Support')]"
    },
    "sqlServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sql',parameters('locationName'),'-core')]"
    },
    "sqlServerLogin": {
      "type": "securestring"
    },
    "sqlServerPassword": {
      "type": "securestring"
    },
    "webSqlServerName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sql',parameters('locationName'),'-web')]"
    },
    "webSqlServerLogin": {
      "type": "securestring",
      "minLength": 1
    },
    "sqlServerVersion": {
      "type": "string",
      "defaultValue": "12.0"
    },
    "keyVaultName": {
      "type": "string"
    },
    "sqlDatabaseCollation": {
      "type": "string"
    },
    "webSqlServerPassword": {
      "type": "securestring"
    },
    "coreSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-core')]"
    },
    "masterSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-master')]"
    },
    "webSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-web')]"
    },
    "reportingSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-reporting')]"
    },
    "fdpSqlDatabaseName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-fdp')]"
    },
    "coreSqlDatabaseNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-core-Support')]"
    },
    "masterSqlDatabaseNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-master-Support')]"
    },
    "webSqlDatabaseNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-web-Support')]"
    },
    "reportingSqlDatabaseNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-reporting-Support')]"
    },
    "fdpSqlDatabaseNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sdb',parameters('locationName'),'-fdp-Support')]"
    },
    "frontendElasticPoolName": {
      "type": "string",
      "defaultvalue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sep',parameters('locationName'),'-frontend')]"
    },
    "backendElasticPoolName": {
      "type": "string",
      "defaultvalue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sep',parameters('locationName'),'-backend')]"
    },
    "redisCacheName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'rdc',parameters('locationName'))]"
    },
    "searchServiceName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sas',parameters('locationName'))]"
    },
    "searchServiceNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'sas',parameters('locationName'),'-Support')]"
    },
    "applicationInsightsName": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'ais',parameters('locationName'))]"
    },
    "applicationInsightsNameSupport": {
      "type": "string",
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'ais',parameters('locationName'),'-Support')]"
    },
    "applicationInsightsLocation": {
      "type": "string"
    },
    "applicationInsightsPricePlan": {
      "type": "string",
      "minLength": 1,
      "defaultValue": "[concat(parameters('deploymentEnvironment'),parameters('deploymentId'),'ais',parameters('locationName'),'-pp')]"
    },
    "sitecoreSKU": {
      "type": "string",
      "metadata": {
        "description": "Sitecore SKU controls the sizes and service levels of the provisioned resources"
      }
    },
    "skuMap": {
      "type": "secureObject"
    },
    "resourceSizes": {
      "type": "object",
      "defaultValue": "[parameters('skuMap')[parameters('sitecoreSKU')]]"
    }
  },
  "resources": [
    {
      "comments": "App Service Environment for Sitecore CM,PRC and REP Role, which is the backend",
      "apiVersion": "[variables('serverFarmApiVersion')]",
      "type": "Microsoft.Web/hostingEnvironments",
      "name": "[parameters('BackendASEName')]",
      "kind": "ASEV2",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[parameters('BackendASEName')]",
        "location": "[parameters('location')]",
        "ipSslAddressCount": 0,
        "internalLoadBalancingMode": "[parameters('internalLoadBalancingMode')]",
        "dnsSuffix": "[parameters('backenddnsSuffix')]",
        "virtualNetwork": {
          "Id": "[variables('vnetId')]",
          "Subnet": "[parameters('BackendASEsubnetName')]"
        }
      }
    },
    {
      "comments": "elastic pool for frontend sitecore databases",
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "[variables('dbApiElasticpoolVersion')]",
      "location": "[parameters('location')]",
      "scale": null,
      "name": "[concat(variables('webDbServerNameTidy'), '/', parameters('frontendElasticPoolName'))]",
      "properties": {
        "edition": "[parameters('resourceSizes').frontendElasticPool.edition]",
        "dtu": "[parameters('resourceSizes').frontendElasticPool.dtu]",
        "databaseDtuMin": "[parameters('resourceSizes').frontendElasticPool.dtuMin]",
        "databaseDtuMax": "[parameters('resourceSizes').frontendElasticPool.dtuMax]",
        "storageMB": "[parameters('resourceSizes').frontendElasticPool.storageMB]"
      },
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('webSqlServerName'))]"
      ]
    },
    {
      "comments": "elastic pool for frontend sitecore databases",
      "type": "Microsoft.Sql/servers/elasticPools",
      "apiVersion": "[variables('dbApiElasticpoolVersion')]",
      "location": "[parameters('location')]",
      "scale": null,
      "name": "[concat(variables('dbServerNameTidy'), '/', parameters('backendElasticPoolName'))]",
      "properties": {
        "edition": "[parameters('resourceSizes').backendElasticPool.edition]",
        "dtu": "[parameters('resourceSizes').backendElasticPool.dtu]",
        "databaseDtuMin": "[parameters('resourceSizes').backendElasticPool.dtuMin]",
        "databaseDtuMax": "[parameters('resourceSizes').backendElasticPool.dtuMax]",
        "storageMB": "[parameters('resourceSizes').backendElasticPool.storageMB]"
      },
      "dependsOn": [
        "[concat('Microsoft.Sql/servers/', parameters('SqlServerName'))]"
      ]
    },
    {
      "comments": "App Service Plan for the CD Role",
      "apiVersion": "[variables('serverFarmApiVersion')]",
      "name": "[parameters('cdHostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[parameters('cdHostingPlanName')]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('BackendASEName'))]"
        }
      },
      "sku": {
        "name": "[parameters('resourceSizes').CdHostingPlan.SkuName]",
        "tier": "[parameters('resourceSizes').CdHostingPlan.SkuTier]",
        "size": "[parameters('resourceSizes').CdHostingPlan.SkuName]",
        "family": "[parameters('resourceSizes').CdHostingPlan.SkuFamily]",
        "capacity": "[parameters('resourceSizes').CdHostingPlan.SkuCapacity]"
      },
      "dependsOn": [
        "[concat('Microsoft.Web/hostingEnvironments/',parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "App Service Plan for the CM Role",
      "apiVersion": "[variables('serverFarmApiVersion')]",
      "dependsOn": [
        "[concat('Microsoft.Web/hostingEnvironments/',parameters('BackendASEName'))]"
      ],
      "tags": "[parameters('tagValues')]",
      "location": "[parameters('location')]",
      "name": "[parameters('cmHostingPlanName')]",
      "properties": {
        "name": "[parameters('cmHostingPlanName')]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments',parameters('BackendASEName'))]"
        }
      },
      "sku": {
        "name": "[parameters('resourceSizes').CmHostingPlan.SkuName]",
        "tier": "[parameters('resourceSizes').CmHostingPlan.SkuTier]",
        "size": "[parameters('resourceSizes').CmHostingPlan.SkuName]",
        "family": "[parameters('resourceSizes').CmHostingPlan.SkuFamily]",
        "capacity": "[parameters('resourceSizes').CmHostingPlan.SkuCapacity]"
      },
      "type": "Microsoft.Web/serverfarms"
    },
    {
      "comments": "Web App for CD",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('cdWebAppNameTidy')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('cdWebAppNameTidy')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cdHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cdHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for CD Web App",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "tags": "[parameters('tagValues')]",
      "name": "[concat(variables('cdWebAppNameTidy'), '/', variables('cdWebAppNameTidy'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cdWebAppNameTidy'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cdWebAppNameTidy'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "slot for CD Web App Maintenance",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "tags": "[parameters('tagValues')]",
      "name": "[concat(variables('cdWebAppNameTidy'), '/', variables('cdWebAppNameTidy'), '-maintenance')]",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cdWebAppNameTidy'),'-maintenance.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cdWebAppNameTidy'),'-maintenance.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidy'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for CD (Support)",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('cdWebAppNameTidySupport')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('cdWebAppNameTidySupport')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cdHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        }
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cdHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for CD Web App (Support)",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "tags": "[parameters('tagValues')]",
      "name": "[concat(variables('cdWebAppNameTidySupport'), '/', variables('cdWebAppNameTidySupport'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cdWebAppNameTidySupport'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cdWebAppNameTidySupport'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidySupport'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "slot for CD Web App (Support - Maintenance)",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "tags": "[parameters('tagValues')]",
      "name": "[concat(variables('cdWebAppNameTidySupport'), '/', variables('cdWebAppNameTidySupport'), '-maintenance')]",
      "apiVersion": "[variables('webApiVersion')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cdWebAppNameTidySupport'),'-maintenance.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cdWebAppNameTidySupport'),'-maintenance.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cdWebAppNameTidySupport'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cdHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for CM",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('cmWebAppNameTidy')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('cmWebAppNameTidy')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for CM Web App",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('cmWebAppNameTidy'), '/', variables('cmWebAppNameTidy'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cmWebAppNameTidy'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cmWebAppNameTidy'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cmWebAppNameTidy'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for CM (Support)",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('cmWebAppNameTidySupport')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('cmWebAppNameTidySupport')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for CM Web App (Support)",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('cmWebAppNameTidySupport'), '/', variables('cmWebAppNameTidySupport'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('cmWebAppNameTidySupport'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('cmWebAppNameTidySupport'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "scmSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('cmWebAppNameTidySupport'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for fdpSched (Support)",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('fdpSchedWebAppNameTidySupport')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('fdpSchedWebAppNameTidySupport')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for fdpSched Web App (Support)",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('fdpSchedWebAppNameTidySupport'), '/', variables('fdpSchedWebAppNameTidySupport'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('fdpSchedWebAppNameTidySupport'),'-warmup.','sfdpSched.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('fdpSchedWebAppNameTidySupport'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "sfdpSchedSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('fdpSchedWebAppNameTidySupport'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for fdpSched ()",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('fdpSchedWebAppNameTidy')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('fdpSchedWebAppNameTidy')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for fdpSched Web App ()",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('fdpSchedWebAppNameTidy'), '/', variables('fdpSchedWebAppNameTidy'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('fdpSchedWebAppNameTidy'),'-warmup.','sfdpSched.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('fdpSchedWebAppNameTidy'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "sfdpSchedSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('fdpSchedWebAppNameTidy'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for FDP API",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('fdpApiWebAppNameTidy')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('fdpApiWebAppNameTidy')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]"
      ]
    },
    {
      "comments": "slot for fdp Web App API",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('fdpApiWebAppNameTidy'), '/', variables('fdpApiWebAppNameTidy'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('fdpApiWebAppNameTidy'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('fdpApiWebAppNameTidy'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "sfdpSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('fdpApiWebAppNameTidy'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "Web App for FDP API (Support)",
      "apiVersion": "[variables('webApiVersion')]",
      "name": "[variables('fdpApiWebAppNameTidySupport')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "properties": {
        "name": "[variables('fdpApiWebAppNameTidySupport')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverFarms',parameters('cmHostingPlanName'))]",
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false
      },
      "dependsOn": [
        "[concat('Microsoft.Web/serverFarms/',parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "slot for fdp Web App API (Support)",
      "type": "Microsoft.Web/sites/slots",
      "kind": "app",
      "name": "[concat(variables('fdpApiWebAppNameTidySupport'), '/', variables('fdpApiWebAppNameTidySupport'), '-warmup')]",
      "apiVersion": "[variables('webApiVersion')]",
      "tags": "[parameters('tagValues')]",
      "location": "West Europe",
      "scale": null,
      "properties": {
        "enabled": true,
        "hostNameSslStates": [
          {
            "name": "[concat(variables('fdpApiWebAppNameTidySupport'),'-warmup.','scm.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Repository"
          },
          {
            "name": "[concat(variables('fdpApiWebAppNameTidySupport'),'-warmup.', parameters('backenddnsSuffix'))]",
            "sslState": "Disabled",
            "virtualIP": null,
            "thumbprint": null,
            "toUpdate": null,
            "hostType": "Standard"
          }
        ],
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "reserved": false,
        "siteConfig": null,
        "sfdpSiteAlsoStopped": false,
        "hostingEnvironmentProfile": {
          "id": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
        },
        "clientAffinityEnabled": false,
        "clientCertEnabled": false,
        "hostNamesDisabled": false,
        "containerSize": 0,
        "dailyMemoryTimeQuota": 0,
        "cloningInfo": null
      },
      "dependsOn": [
        "[resourceId('Microsoft.Web/sites', variables('fdpApiWebAppNameTidySupport'))]",
        "[resourceId('Microsoft.Web/serverfarms', parameters('cmHostingPlanName'))]",
        "[resourceId('Microsoft.Web/hostingEnvironments', parameters('BackendASEName'))]"
      ]
    },
    {
      "comments": "SQL Server for Core databases of Sitecore",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('sqlServerLogin')]",
        "administratorLoginPassword": "[parameters('sqlServerPassword')]",
        "version": "[parameters('sqlServerVersion')]"
      },
      "name": "[variables('dbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllAzureIps",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]"
          ]
        }
      ]
    },
    {
      "comments": "Database for Master Sitecore data",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('masterDbNameTidy'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for FDP",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('fdpDbNameTidy'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Reporting",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('repDbNameTidy'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Core Sitecore Data",
      "name": "[concat(variables('DbServerNameTidy') , '/', variables('coreDbNameTidy'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('DbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Master Sitecore data (Support)",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('masterDbNameTidySupport'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for FDP (Support)",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('fdpDbNameTidySupport'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Reporting (Support)",
      "name": "[concat(variables('dbServerNameTidy') , '/', variables('repDbNameTidySupport'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('dbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Core Sitecore Data (Support)",
      "name": "[concat(variables('DbServerNameTidy') , '/', variables('coreDbNameTidySupport'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('backendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('DbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('SqlServerName') , '/elasticpools/', parameters('backendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "SQL Server for Web databases of Sitecore (Support)",
      "type": "Microsoft.Sql/servers",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "administratorLogin": "[parameters('webSqlServerLogin')]",
        "administratorLoginPassword": "[parameters('webSqlServerPassword')]",
        "version": "[parameters('sqlServerVersion')]"
      },
      "name": "[variables('webDbServerNameTidy')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tagValues')]",
      "resources": [
        {
          "type": "firewallrules",
          "apiVersion": "[variables('dbApiVersion')]",
          "properties": {
            "endIpAddress": "0.0.0.0",
            "startIpAddress": "0.0.0.0"
          },
          "name": "AllowAllAzureIps",
          "dependsOn": [
            "[resourceId('Microsoft.Sql/servers', variables('webDbServerNameTidy'))]"
          ]
        }
      ]
    },
    {
      "comments": "Database for Web Sitecore data",
      "name": "[concat(variables('webDbServerNameTidy') , '/', variables('webDbNameTidy'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('frontendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('webdbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('WebSqlServerName') , '/elasticpools/', parameters('frontendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Database for Web Sitecore data (Support)",
      "name": "[concat(variables('webDbServerNameTidy') , '/', variables('webDbNameTidySupport'))]",
      "type": "Microsoft.Sql/servers/databases",
      "apiVersion": "[variables('dbApiVersion')]",
      "properties": {
        "collation": "[parameters('sqlDatabaseCollation')]",
        "requestedServiceObjectiveName": "elasticpool",
        "elasticPoolName": "[parameters('frontendElasticPoolName')]"
      },
      "location": "[parameters('location')]",
      "dependsOn": [
        "[resourceId('Microsoft.Sql/servers', variables('webdbServerNameTidy'))]",
        "[concat('Microsoft.Sql/servers/',parameters('WebSqlServerName') , '/elasticpools/', parameters('frontendElasticPoolName'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Redis cache for Sitecore",
      "type": "Microsoft.Cache/Redis",
      "name": "[variables('redisCacheNameTidy')]",
      "apiVersion": "[variables('redisApiVersion')]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "[parameters('resourceSizes').Rediscache.SkuName]",
          "family": "[parameters('resourceSizes').Rediscache.SkuFamily]",
          "capacity": "[parameters('resourceSizes').Rediscache.SkuCapacity]"
        },
        "enableNonSslPort": false
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Azure Search service for Sitecore",
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "[variables('searchApiVersion')]",
      "name": "[variables('searchServiceNameTidy')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[toLower(parameters('resourceSizes').SearchService.SkuName)]"
      },
      "properties": {
        "replicaCount": "[parameters('resourceSizes').SearchService.Replicas]",
        "partitionCount": "[parameters('resourceSizes').SearchService.Partitions]"
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Azure Search service for Sitecore (Support)",
      "type": "Microsoft.Search/searchServices",
      "apiVersion": "[variables('searchApiVersion')]",
      "name": "[variables('searchServiceNameTidySupport')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "[toLower(parameters('resourceSizes').SearchService.SkuName)]"
      },
      "properties": {
        "replicaCount": "[parameters('resourceSizes').SearchService.Replicas]",
        "partitionCount": "[parameters('resourceSizes').SearchService.Partitions]"
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Application Insights",
      "type": "Microsoft.Insights/Components",
      "name": "[variables('appInsightsNameTidy')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('applicationInsightsLocation')]",
      "properties": {
        "ApplicationId": "[variables('appInsightsNameTidy')]",
        "Application_Type": "web"
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Insights/Components/CurrentBillingFeatures",
      "name": "[concat(variables('appInsightsNameTidy'), '/', variables('appInsightsPricePlanTidy'))]",
      "location": "[parameters('applicationInsightsLocation')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "properties": {
        "CurrentBillingFeatures": "[parameters('resourceSizes').ApplicationInsightsPricePlan.CurrentBillingFeatures]",
        "DataVolumeCap": {
          "Cap": "[parameters('resourceSizes').ApplicationInsightsPricePlan.DataVolumeCap.Cap]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidy'))]"
      ],
      "tags": "[parameters('tagValues')]"
    },
    {
      "comments": "Application Insights for Support Pipeline",
      "type": "Microsoft.Insights/Components",
      "name": "[variables('appInsightsNameTidySupport')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "location": "[parameters('applicationInsightsLocation')]",
      "properties": {
        "ApplicationId": "[variables('appInsightsNameTidySupport')]",
        "Application_Type": "web"
      },
      "tags": "[parameters('tagValues')]"
    },
    {
      "type": "Microsoft.Insights/Components/CurrentBillingFeatures",
      "name": "[concat(variables('appInsightsNameTidySupport'), '/', variables('appInsightsPricePlanTidy'))]",
      "location": "[parameters('applicationInsightsLocation')]",
      "apiVersion": "[variables('appInsightsApiVersion')]",
      "properties": {
        "CurrentBillingFeatures": "[parameters('resourceSizes').ApplicationInsightsPricePlan.CurrentBillingFeatures]",
        "DataVolumeCap": {
          "Cap": "[parameters('resourceSizes').ApplicationInsightsPricePlan.DataVolumeCap.Cap]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Insights/Components', variables('appInsightsNameTidySupport'))]"
      ],
      "tags": "[parameters('tagValues')]"
    }
  ],
  "outputs": {
    "cmWebAppNameTidy": {
      "type": "string",
      "value": "[variables('cmWebAppNameTidy')]"
    },
    "cdWebAppNameTidy": {
      "type": "string",
      "value": "[variables('cdWebAppNameTidy')]"
    },
    "fdpSchedWebAppNameTidy": {
      "type": "string",
      "value": "[variables('fdpSchedWebAppNameTidy')]"
    },
    "fdpApiWebAppNameTidy": {
      "type": "string",
      "value": "[variables('fdpApiWebAppNameTidy')]"
    },
    "cmWebAppNameTidySupport": {
      "type": "string",
      "value": "[variables('cmWebAppNameTidySupport')]"
    },
    "cdWebAppNameTidySupport": {
      "type": "string",
      "value": "[variables('cdWebAppNameTidySupport')]"
    },
    "fdpSchedWebAppNameTidySupport": {
      "type": "string",
      "value": "[variables('fdpSchedWebAppNameTidySupport')]"
    },
    "fdpApiWebAppNameTidySupport": {
      "type": "string",
      "value": "[variables('fdpApiWebAppNameTidySupport')]"
    },
    "cdSlotName": {
      "type": "string",
      "value": "[concat(variables('cdWebAppNameTidy'), '/', variables('cdWebAppNameTidy'), '-warmup')]"
    },
    "cmSlotName": {
      "type": "string",
      "value": "[concat(variables('cmWebAppNameTidy'), '/', variables('cmWebAppNameTidy'), '-warmup')]"
    },
    "cdSlotNameSupport": {
      "type": "string",
      "value": "[concat(variables('cdWebAppNameTidySupport'), '/', variables('cdWebAppNameTidySupport'), '-warmup')]"
    },
    "cmSlotNameSupport": {
      "type": "string",
      "value": "[concat(variables('cmWebAppNameTidySupport'), '/', variables('cmWebAppNameTidySupport'), '-warmup')]"
    },
    "fdpApiSlotName": {
      "type": "string",
      "value": "[concat(variables('fdpApiWebAppNameTidy'), '/', variables('fdpApiWebAppNameTidy'), '-warmup')]"
    },
    "fdpSchedSlotName": {
      "type": "string",
      "value": "[concat(variables('fdpSchedWebAppNameTidy'), '/', variables('fdpSchedWebAppNameTidy'), '-warmup')]"
    },
    "fdpApiWebAppFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('fdpApiWebAppNameTidy'))).defaultHostName]"
    },
    "fdpSchedWebAppFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('fdpSchedWebAppNameTidy'))).defaultHostName]"
    },
    "cdWebAppFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('cdWebAppNameTidy'))).defaultHostName]"
    },
    "fdpApiWebAppFqdnSupport": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('fdpApiWebAppNameTidySupport'))).defaultHostName]"
    },
    "fdpSchedWebAppFqdnSupport": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('fdpSchedWebAppNameTidySupport'))).defaultHostName]"
    },
    "cdWebAppFqdnSupport": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('cdWebAppNameTidySupport'))).defaultHostName]"
    },
    "cmWebAppFqdnSupport": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('cmWebAppNameTidySupport'))).defaultHostName]"
    },
    "cmWebAppFqdn": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', variables('cmWebAppNameTidy'))).defaultHostName]"
    },
    "dbServerNameTidy": {
      "type": "string",
      "value": "[variables('dbServerNameTidy')]"
    },
    "dbServerFullyQualified": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('dbServerNameTidy'))).fullyQualifiedDomainName]"
    },
    "coreDbNameTidy": {
      "type": "string",
      "value": "[variables('coreDbNameTidy')]"
    },
    "webDbNameTidy": {
      "type": "string",
      "value": "[variables('webDbNameTidy')]"
    },
    "repDbNameTidy": {
      "type": "string",
      "value": "[variables('repDbNameTidy')]"
    },
    "fdpDbNameTidy": {
      "type": "string",
      "value": "[variables('fdpDbNameTidy')]"
    },
    "coreDbNameTidySupport": {
      "type": "string",
      "value": "[variables('coreDbNameTidySupport')]"
    },
    "webDbNameTidySupport": {
      "type": "string",
      "value": "[variables('webDbNameTidySupport')]"
    },
    "repDbNameTidySupport": {
      "type": "string",
      "value": "[variables('repDbNameTidySupport')]"
    },
    "fdpDbNameTidySupport": {
      "type": "string",
      "value": "[variables('fdpDbNameTidySupport')]"
    },
    "masterDbNameTidySupport": {
      "type": "string",
      "value": "[variables('masterDbNameTidySupport')]"
    },
    "webDbServerNameTidy": {
      "type": "string",
      "value": "[variables('webDbServerNameTidy')]"
    },
    "webDbServerFullyQualified": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Sql/servers/', variables('webDbServerNameTidy'))).fullyQualifiedDomainName]"
    },
    "masterDbNameTidy": {
      "type": "string",
      "value": "[variables('masterDbNameTidy')]"
    },
    "redisCacheNameTidy": {
      "type": "string",
      "value": "[variables('redisCacheNameTidy')]"
    },
    "redisCacheHostName": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Cache/Redis/', variables('redisCacheNameTidy'))).hostName]"
    },
    "searchServiceNameTidy": {
      "type": "string",
      "value": "[variables('searchServiceNameTidy')]"
    },
    "searchServiceNameTidySupport": {
      "type": "string",
      "value": "[variables('searchServiceNameTidySupport')]"
    },
    "appInsightsNameTidy": {
      "type": "string",
      "value": "[variables('appInsightsNameTidy')]"
    },
    "appInsightsNameTidySupport": {
      "type": "string",
      "value": "[variables('appInsightsNameTidySupport')]"
    },
    "appInsightsInstrumentationKey": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Insights/Components/', variables('appInsightsNameTidy'))).InstrumentationKey]"
    },
    "appInsightsInstrumentationKeySupport": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Insights/Components/', variables('appInsightsNameTidySupport'))).InstrumentationKey]"
    }
  }
}